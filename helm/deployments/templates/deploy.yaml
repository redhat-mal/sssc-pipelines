---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  name: "{{ .Values.app_name }}"
  namespace: "{{ .Values.namespace }}"
  labels:
    app: "{{ .Values.app_name }}"
    {{- include "deployments.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: 10
  selector:
    app: "{{ .Values.app_name }}"
    deploymentconfig: "{{ .Values.app_name }}"
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      labels:
        app: "{{ .Values.app_name }}"
        deploymentconfig: "{{ .Values.app_name }}"
    spec:
      containers:
      - name: "{{ .Values.app_name }}"
        image: "{{ .Values.image.repository }}"
        imagePullPolicy: Always
        name: "{{ .Values.app_name }}"
        ports:
        - containerPort: 8443
          protocol: TCP
        - containerPort: 8778
          protocol: TCP
        - containerPort: 8080
          protocol: TCP
        resources: 
            {{- toYaml .Values.resources | nindent 12 }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      serviceAccountName: {{ include "deployments.serviceAccountName" . }}
  test: false
  triggers:
  - type: ConfigChange
  - imageChangeParams:
      automatic: true
      containerNames:
      - "{{ .Values.app_name }}"
      from:
        kind: ImageStreamTag
        name: "{{ .Values.app_name }}:latest"
    type: ImageChange
