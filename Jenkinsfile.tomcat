library identifier: "pipeline-library@master",
retriever: modernSCM(
  [
    $class: "GitSCMSource",
    remote: "https://github.com/redhat-cop/pipeline-library.git"
  ]
)

openshift.withCluster() {
  env.POM_FILE = env.BUILD_CONTEXT_DIR ? "${env.BUILD_CONTEXT_DIR}/pom.xml" : "pom.xml"
  env.TARGET = env.BUILD_CONTEXT_DIR ? "${env.BUILD_CONTEXT_DIR}/target" : "target"
  env.APP_NAME = "${JOB_NAME}".replaceAll(/-build.*/, '')
  env.BUILD = openshift.project()
  env.DEV = "${APP_NAME}-dev"
  env.STAGE = "${APP_NAME}-stage"
  env.PROD = "${APP_NAME}-prod"
  echo "Starting Pipeline for ${APP_NAME}..."
}


pipeline {
    //agent {
	//  kubernetes {
	//    label "maven-skopeo-agent"
	//    cloud "openshift"
	//    inheritFrom "maven"
    //    serviceAccount 'jenkins'
	//    containerTemplate {
	//	  name "jnlp"
	//	  image "image-registry.openshift-image-registry.svc:5000/openshift/jenkins-agent-maven:latest"
	//	  resourceRequestMemory "1Gi"
	//	  resourceLimitMemory "2Gi"
	//	  resourceRequestCpu "200m"
	//	  resourceLimitCpu "2"
    //    ttyEnabled false
    //      args '${computer.jnlpmac} ${computer.name}'
	//    }
	//  }
    //}
    agent { label 'maven' }
    environment { 
      mvnCmd = "mvn -s ./nexus_settings.xml"
    }
    stages {
	// Checkout Source Code.
	stage('Checkout Source') {
	    steps {
          git url: "${APPLICATION_SOURCE_REPO}", branch: "${APPLICATION_SOURCE_REF}"
        }
	}

	// Build the Tasks Application in the directory 'openshift-tasks'
	stage('Build war') {
      steps {
        sh "mvn -B clean install -DskipTests=true -f ${POM_FILE}"
      }
	}

	// Using Maven run the unit tests
	stage('Unit Tests') {
      steps {
        sh "mvn -B test -f ${POM_FILE}"
      }
	}
	// Using Maven call SonarQube for Code Analysis
	stage('Code Analysis') {
		//sh "${mvnCmd} sonar:sonar -Dsonar.host.url=http://homework-sonarqube.apps.shared.na.openshift.opentlc.com -Dsonar.projectName=${GUID}-${JOB_BASE_NAME}-${devTag} -Dsonar.projectVersion=${devTag}"
      steps {
        withSonarQubeEnv(credentialsId: 'sonar') {
          sh 'mvn org.sonarsource.scanner.maven:sonar-maven-plugin:3.6.0.1398:sonar -f ${POM_FILE}'
        }
	  }
	}
  }
}