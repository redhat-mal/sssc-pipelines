pipeline {
    agent {
	  kubernetes {
	    label "maven-skopeo-agent"
	    cloud "openshift"
	    inheritFrom "maven"
	    containerTemplate {
		name "jnlp"
		image "registry.redhat.io/openshift4/ose-jenkins-agent-maven"
		resourceRequestMemory "2Gi"
		resourceLimitMemory "2Gi"
		resourceRequestCpu "2"
		resourceLimitCpu "2"
	    }
	  }
    }
    environment { 
	// Define global varitempables
	// Set Maven command to always include Nexus Settings
	// NOTE: Somehow an inline pod template in a declarative pipeline
	//       needs the "scl_enable" before calling maven.
	//mvnCmd = "source /usr/local/bin/scl_enable && mvn -s ./nexus_settings.xml"
	mvnCmd = "mvn "

	// Images and Projects
	//imageName   = "${GUID}-tasks"
	//devProject  = "${GUID}-tasks-dev"
	//prodProject = "${GUID}-tasks-prod"

	// Tags
	devTag      = "0.0-0"
	prodTag     = "0.0"
	
	// Blue-Green Settings
	destApp     = "tasks-green"
	activeApp   = ""
    }
    stages {
	// Checkout Source Code.
	stage('Checkout Source') {
	    steps {
          git url: "${APPLICATION_SOURCE_REPO}", branch: "${APPLICATION_SOURCE_REF}"
        }
	}

	// Build the Tasks Application in the directory 'openshift-tasks'
	stage('Build war') {
	    steps {
		    echo "Building version ${devTag}"
		    script {
			sh "${mvnCmd} clean package -DskipTests=true"
		}
	    }
	}

	// Using Maven run the unit tests
	stage('Unit Tests') {
	    steps {
		    echo "Running Unit Tests"
		    sh "${mvnCmd} test"
	    }
	}
	// Using Maven call SonarQube for Code Analysis
	stage('Code Analysis') {
	    steps {

			echo "Running Code Analysis"
			sh "${mvnCmd} sonar:sonar -Dsonar.host.url=http://homework-sonarqube.apps.shared.na.openshift.opentlc.com -Dsonar.projectName=${GUID}-${JOB_BASE_NAME}-${devTag} -Dsonar.projectVersion=${devTag}"
		 }
	}
  }
}